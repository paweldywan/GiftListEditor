@model IEnumerable<GiftListEditor.Models.GiftModel>

@{
    ViewBag.Title = "Gift list editor";
}

<p>You have asked for <span data-bind="text: gifts().length"> </span> gift(s)</p>

<form class="giftListEditor">
    <table class="table">
        <tbody data-bind="template: { name: 'giftRowTemplate', foreach: gifts }"></tbody>
    </table>

    <button data-bind="click: addGift">Add Gift</button>

    <button data-bind="enable: gifts().length > 0" type="submit">Submit</button>
</form>

@section scripts{
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/html" id="giftRowTemplate">
        <tr>
            <td>Gift name: <input class="required" data-bind="value: Title, uniqueName: true" /></td>
            <td>Price: $ <input class="required number" data-bind="value: Price, uniqueName: true" /></td>
            <td><a href="#" data-bind="click: function() { viewModel.removeGift($data) }">Delete</a></td>
        </tr>
    </script>

    <script type="text/javascript">
        var initialData = @Html.Raw(Json.Encode(Model));

        var viewModel = {
            gifts: ko.observableArray(initialData),
            addGift: function () {
                this.gifts.push({ Title: "", Price: "" });
            },
            removeGift: function (gift) {
                this.gifts.remove(gift);
            },
            save: function () {
                ko.utils.postJson(location.href, { gifts: this.gifts });
            }
        };

        ko.applyBindings(viewModel, document.body);

        $("form").validate({ submitHandler: function () { viewModel.save() } });
    </script>
} 